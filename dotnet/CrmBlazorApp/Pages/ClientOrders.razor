@page "/client-orders/{clientId:int?}"

<PageTitle>Client Orders</PageTitle>

@using CrmBlazorApp.Data
@inject CrmDataService DataService

<h3>Client Orders</h3>

@if (ClientId != null && orders == null)
{
    <p><em>Client with ID @ClientId is not found</em></p>
}
else if (client == null || orders == null)
{
    <p><em>Select client...</em></p>
}
else
{
    <div class="d-flex justify-content-between">
        <div class="flex-grow-1">
            <p>@client.Name</p>
        </div>
        <div class="col-auto">
            <a class="btn btn-info form-control" href="/client-order/add/@ClientId">Add</a>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Client Order Reference</th>
                <th>Reference</th>
                <th>Order Date</th>
                <th>Shipment Date</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in orders)
            {
                <tr>
                    <td>@p.ClientOrderReference</td>
                    <td>@p.OrderReference</td>
                    <td>@p.CreationDate</td>
                    <td>@p.ShipmentDate</td>
                    <td>@p.Status.Description</td>
                    <td><a href="/client-order/view/@ClientId/@p.ClientOrderReference">View</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DbModels.ClientOrder[]? orders;
    private Data.ClientDTO? client;

    [Parameter]
    public int? ClientId { get; set; } = null;  // Default value is null for render a blank page

    protected override async Task OnInitializedAsync()
    {
        if (ClientId != null)
        {
            client = await DataService.GetClientAsync(ClientId.Value);
            if (client != null)
            {
                orders = await DataService.GetOrdersOfClientAsync(ClientId.Value);
            }
        }
    }
}
